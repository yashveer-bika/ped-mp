Workflow stuff
1) JavaDocs comment everywhere

Code functionality
- Make a simple one-way intersecting a one-way, with 4 crosswalks (DONE)
- Implement network structure
        Node, Links, and components of a single intersection (DONE)
        Make a good Network class
- Implement the queueing model equations from Te.
- Implement Te's signal timing method. This will probably involve using CPLEX; Rohit has previous experience working with it.
- Make a normal 4-way intersection with 4 crosswalks
- Run a simulation on the 4-way
- Read coacongress data from AVDTA
    * Look at AVDTA code for reading a network
    * Copy the coacongress data into our pedMP folder
    * Copy the AVDTA code for reading a network
    * Modify the network code to handle ped and veh???
- Set up initial conditions on coacongress data)
- Run simulation on coacongress


Code Readability stuff
1) Make a parent class for VehIntersection and PedIntersection
    (Intersection) since they are pretty much that same
2) Rename Intersection class to CombinedIntersection (or something like that)

Code optimization stuff
1) Put the following at the network level instead of intersection:
    private HashMap<Integer, Set<Integer>> conflictMap; // includes veh and ped
    private HashMap<Integer, String> numToDirectionMap;
    private HashMap<String, Integer> directionToNumMap;
2) Write a better phase generator??
3) Remove redundant memory stuff???
